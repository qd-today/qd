import{_ as o,a as l}from"./chunks/save_har.00ab98ce.js";import{_ as i,o as a,c as d,S as r}from"./chunks/framework.72045731.js";const g=JSON.parse('{"title":"如何使用?","description":"","frontmatter":{},"headers":[],"relativePath":"zh_CN/guide/how-to-use.md","filePath":"zh_CN/guide/how-to-use.md"}'),c={name:"zh_CN/guide/how-to-use.md"};function t(h,e,s,n,m,u){return a(),d("div",null,e[0]||(e[0]=[r('<h1 id="如何使用" tabindex="-1">如何使用? <a class="header-anchor" href="#如何使用" aria-label="Permalink to &quot;如何使用?&quot;">​</a></h1><h2 id="获取-har" tabindex="-1">获取 HAR <a class="header-anchor" href="#获取-har" aria-label="Permalink to &quot;获取 HAR&quot;">​</a></h2><h3 id="_1-什么是-har" tabindex="-1">1. 什么是 HAR? <a class="header-anchor" href="#_1-什么是-har" aria-label="Permalink to &quot;1. 什么是 HAR?&quot;">​</a></h3><p>HAR：<a href="https://toolbox.googleapps.com/apps/har_analyzer/?lang=zh_CN" target="_blank" rel="noreferrer">https://toolbox.googleapps.com/apps/har_analyzer/?lang=zh_CN</a></p><h3 id="_2-抓包" tabindex="-1">2. 抓包 <a class="header-anchor" href="#_2-抓包" aria-label="Permalink to &quot;2. 抓包&quot;">​</a></h3><h4 id="_2-1-chrome-或-edge" tabindex="-1">2.1. Chrome 或 Edge <a class="header-anchor" href="#_2-1-chrome-或-edge" aria-label="Permalink to &quot;2.1. Chrome 或 Edge&quot;">​</a></h4><ol><li>按 <code>F12</code> 、 <code>Ctrl + Shift + I</code> ，或从 Chrome 菜单中选择 <code>更多工具</code> &gt; <code>开发者工具</code> 。</li><li>从屏幕底部或右侧打开的面板中，选择 <code>网络</code> 选项卡。</li><li>确保 <code>网络</code> 选项卡左上角的 <code>录制</code> 按钮显示为 <strong>红色</strong>。</li><li>如果它是灰色的，单击一下开始录制。</li><li>选中 <code>保留日志</code> 旁边的框。 <img src="'+o+'" alt="Preserve log"></li><li>单击 <code>清除</code> 按钮以清除 <code>网络</code> 选项卡中的所有现有日志。</li><li>现在尝试重现您计划发起的 HTTP 请求。</li><li>重现任务后，右键单击网络请求网格上的任意位置。</li><li>选择 <code>另存为带内容的 HAR</code>。 <img src="'+l+'" alt="Save as HAR with Content"></li><li>将文件保存到您的计算机。</li></ol><h4 id="_2-2-火狐" tabindex="-1">2.2. 火狐 <a class="header-anchor" href="#_2-2-火狐" aria-label="Permalink to &quot;2.2. 火狐&quot;">​</a></h4><ol><li>按 <code>F12</code> （或转到 <code>Tools</code> &gt; <code>Web Developer</code> &gt; <code>Network</code> ）。</li><li>现在尝试重现您计划发起的 HTTP 请求。</li><li>右键单击​​加载的结果。</li><li>选择全部另存为 har。</li></ol><h4 id="_2-3-windows-fiddler" tabindex="-1">2.3. Windows - Fiddler <a class="header-anchor" href="#_2-3-windows-fiddler" aria-label="Permalink to &quot;2.3. Windows - Fiddler&quot;">​</a></h4><ol><li>打开 Fiddler，打开 <code>Tools</code> 菜单，选择 <code>Options</code>。</li><li>选择 <code>HTTPS 选项卡</code> ，勾选 <code>Capture HTTPS Connects</code> 。</li><li>选择 <code>连接</code> 选项卡，选中 <code>解密 HTTPS 流量</code> 。</li><li>现在尝试重现您计划发起的 HTTP 请求。</li><li>导出为 HAR 格式 - 请选择 HTTPArchive 作为导出方式。</li></ol><h4 id="_2-4-ios-stream" tabindex="-1">2.4. IOS - Stream <a class="header-anchor" href="#_2-4-ios-stream" aria-label="Permalink to &quot;2.4. IOS - Stream&quot;">​</a></h4><ol><li>打开 Stream。</li><li>抓取HTTPS请求前，需要安装CA证书， <code>setting</code> &gt; <code>General</code> &gt; <code>About</code> &gt; <code>Certificate Trust Settings</code> 信任CA证书。</li><li>点击开始抓包按钮，手机会自动弹出VPN配置窗口，然后选择允许。</li><li>现在尝试重现您计划发起的 HTTP 请求。</li><li>在应用页面，点击停止抓拍结束本次抓拍。</li><li>导出HAR文件。</li></ol><h3 id="_3-公共模板" tabindex="-1">3. 公共模板 <a class="header-anchor" href="#_3-公共模板" aria-label="Permalink to &quot;3. 公共模板&quot;">​</a></h3><ol><li>点击 <code>我的模板</code> 右侧的 <code>社区模板</code> 按钮。</li><li>更新存储库以获取最新的 HAR 文件列表。</li><li>选择你要使用的HAR文件，点击 <code>Subscribe</code> 按钮订阅模板。</li><li>根据需要修改模板。</li><li>然后跳到 <a href="#编辑模板">3.编辑模板</a> 继续编辑。</li></ol><h2 id="上传-har-文件" tabindex="-1">上传 HAR 文件 <a class="header-anchor" href="#上传-har-文件" aria-label="Permalink to &quot;上传 HAR 文件&quot;">​</a></h2><ol><li>访问并登录 QD 首页。</li><li>点击 <code>我的模板</code> 右侧的 <code>+</code> 按钮。</li><li>上传刚刚保存的 HAR 文件。</li><li>点击 <code>上传</code> 继续。</li></ol><h2 id="编辑模板" tabindex="-1">编辑模板 <a class="header-anchor" href="#编辑模板" aria-label="Permalink to &quot;编辑模板&quot;">​</a></h2><div><ol><li>将用户名、密码、cookie、header 等根据用户变化的部分替换成类似 <code>{{ username }}</code> 的模板。（模板支持 <strong>jinja2 语法</strong>）</li><li>在请求编辑中使用测试面板测试模板是否正确返回，使用正确和错误的用户名进行测试。</li><li>填写 <code>成功/失败断言</code>，这有助于检测模板任务是否运行失败。</li><li>当请求中需要上一次请求的一些数据时，使用变量抽取，通过正则化抽取数据，保存在环境变量中。使用组选择器 <code>ab(\\w+)cd</code> 选择其中的一部分。</li><li>使用 <code>__log__</code> 提取任务日志。</li><li>当所有请求编辑完成后，使用下载按钮旁边的 <code>测试</code> 来测试整体。</li><li>正在编辑的模板会自动保存在浏览器缓存中，不用担心丢失。</li><li>单击 <code>保存</code> 按钮保存模板。</li><li>单击 <code>下载</code> 按钮下载模板。</li></ol></div><h2 id="创建定时任务" tabindex="-1">创建定时任务 <a class="header-anchor" href="#创建定时任务" aria-label="Permalink to &quot;创建定时任务&quot;">​</a></h2><ol><li>点击 <code>我的任务</code> 右侧的 <code>+</code> 按钮。</li><li>选择刚刚创建的模板。</li><li>填写任务变量，任务间隔、任务组和任务执行时间。</li><li>单击 <code>测试</code> 按钮测试任务。</li><li>单击保存按钮保存任务。</li></ol>',21)]))}const p=i(c,[["render",t]]);export{g as __pageData,p as default};
