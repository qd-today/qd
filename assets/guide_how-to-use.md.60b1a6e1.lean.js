import{_ as t,a as o}from"./chunks/save_har.00ab98ce.js";import{_ as a,o as i,c as l,S as r}from"./chunks/framework.4ecef84c.js";const b=JSON.parse('{"title":"How to Use?","description":"","frontmatter":{},"headers":[],"relativePath":"guide/how-to-use.md","filePath":"guide/how-to-use.md"}'),c={name:"guide/how-to-use.md"};function d(s,e,h,n,u,p){return i(),l("div",null,e[0]||(e[0]=[r('<h1 id="how-to-use" tabindex="-1">How to Use? <a class="header-anchor" href="#how-to-use" aria-label="Permalink to &quot;How to Use?&quot;">​</a></h1><h2 id="har-obtain" tabindex="-1">Har Obtain <a class="header-anchor" href="#har-obtain" aria-label="Permalink to &quot;Har Obtain&quot;">​</a></h2><h3 id="_1-what-is-har" tabindex="-1">1. What is HAR? <a class="header-anchor" href="#_1-what-is-har" aria-label="Permalink to &quot;1. What is HAR?&quot;">​</a></h3><p>HAR: <a href="https://toolbox.googleapps.com/apps/har_analyzer/?lang=" target="_blank" rel="noreferrer">https://toolbox.googleapps.com/apps/har_analyzer/?lang=</a></p><h3 id="_2-packet-capture" tabindex="-1">2. Packet capture <a class="header-anchor" href="#_2-packet-capture" aria-label="Permalink to &quot;2. Packet capture&quot;">​</a></h3><h4 id="_2-1-chrome-or-edge" tabindex="-1">2.1. Chrome or Edge <a class="header-anchor" href="#_2-1-chrome-or-edge" aria-label="Permalink to &quot;2.1. Chrome or Edge&quot;">​</a></h4><ol><li>Press <code>F12</code>, <code>Ctrl + Shift + I</code>, or from the Chrome menu select <code>More tools</code> &gt; <code>Developer tools</code>.</li><li>From the panel that opens at the bottom of your screen, select the <code>Network tab</code>.</li><li>Make sure the <code>Record</code> button in the upper left corner of the <code>Network tab</code> is shown in <strong>red</strong>.</li><li>If it&#39;s grey, click it once to start recording.</li><li>Check the box next to <code>Preserve log</code>. <img src="'+t+'" alt="Preserve log"></li><li>Click the <code>Clear</code> button to clear out any existing logs from the <code>Network tab</code>.</li><li>Now try to reproduce the task you were trying to do.</li><li>Once you have reproduced the task, right-click anywhere on the grid of network requests.</li><li>Select <code>Save as HAR with Content</code>. <img src="'+o+'" alt="Save as HAR with Content"></li><li>Save the file to your computer.</li></ol><h4 id="_2-2-firefox" tabindex="-1">2.2. Firefox <a class="header-anchor" href="#_2-2-firefox" aria-label="Permalink to &quot;2.2. Firefox&quot;">​</a></h4><ol><li>Press <code>F12</code> ​(or Go to <code>Tools</code> &gt; <code>Web Developer</code> &gt; <code>Network</code>).</li><li>Now try to reproduce the task you were trying to do.</li><li>Right-click on the loaded results.</li><li>Select Save all as har.</li></ol><h4 id="_2-3-windows-fiddler" tabindex="-1">2.3. Windows - Fiddler <a class="header-anchor" href="#_2-3-windows-fiddler" aria-label="Permalink to &quot;2.3. Windows - Fiddler&quot;">​</a></h4><ol><li>Open Fiddler, open the <code>Tools</code> menu, select <code>Options</code>.</li><li>Select the <code>HTTPS tab</code>, check <code>Capture HTTPS Connects</code>.</li><li>Select the <code>Connections tab</code>, check <code>Decrypt HTTPS traffic</code>.</li><li>Now try to reproduce the task you were trying to do.</li><li>export to HAR format - please select HTTPArchive as the export method.</li></ol><h4 id="_2-4-ios-stream" tabindex="-1">2.4. IOS - Stream <a class="header-anchor" href="#_2-4-ios-stream" aria-label="Permalink to &quot;2.4. IOS - Stream&quot;">​</a></h4><ol><li>Open Stream.</li><li>Before capture the HTTPS request, you need to install the CA certificate, <code>setting</code> &gt; <code>General</code> &gt; <code>About</code> &gt; <code>Certificate Trust Settings</code> to trust the CA certificate.</li><li>Click the start packet capture button, the phone will automatically pop up the VPN configuration window, and then select Allow.</li><li>Now try to reproduce the task you were trying to do.</li><li>On the app page, click Stop Capture to end this capture.</li><li>export the HAR file.</li></ol><h3 id="_3-community-har" tabindex="-1">3. Community HAR <a class="header-anchor" href="#_3-community-har" aria-label="Permalink to &quot;3. Community HAR&quot;">​</a></h3><ol><li>Click the <code>Community Template</code> button to the right of <code>my template</code>.</li><li>Update the repository to get the latest HAR file list.</li><li>Select the HAR file you want to use and click the <code>Subscribe</code> button to subscribe to the template.</li><li>Modify the template according to your needs.</li><li>Then jump to <code>step 5</code> of <a href="#edit-the-template">3. Edit the template</a> to continue editing.</li></ol><h2 id="upload-the-har-file" tabindex="-1">Upload the HAR file <a class="header-anchor" href="#upload-the-har-file" aria-label="Permalink to &quot;Upload the HAR file&quot;">​</a></h2><ol><li>Access and login to QD framework.</li><li>Click the <code>+</code> button to the right of <code>my template</code>.</li><li>Upload the HAR file you just saved.</li><li>Click <code>upload</code> to continue.</li></ol><h2 id="edit-the-template" tabindex="-1">Edit the template <a class="header-anchor" href="#edit-the-template" aria-label="Permalink to &quot;Edit the template&quot;">​</a></h2><div><ol><li>Replace the username, password, cookie, header and other parts that change according to the user with a template similar to <code>{{ username }}</code>. (templates support <strong>jinja2 syntax</strong>)</li><li>Use the test panel in request editing to test whether the template is returned correctly, use the correct and wrong user names to test。</li><li>Fill in <code>success/failure assertion</code>, which helps to detect sign-in failures and template failures.</li><li>When some data from the previous request is needed in the request, variable extraction is used to extract the data through regularization and save it in the environment variable. Use <code>ab(\\w+)cd</code>, the group selector, to select part of it.</li><li>Use <code>__log__</code> to extract task logs.</li><li>When all request edits are complete, use <code>Test</code> next to the Download button to test the overall.</li><li>The template being edited will be automatically saved in the browser cache, so don&#39;t worry about losing it.</li><li>Click the <code>Save</code> button to save the template.</li><li>Click the <code>Download</code> button to download the template.</li></ol></div><h2 id="create-scheduled-task" tabindex="-1">Create scheduled task <a class="header-anchor" href="#create-scheduled-task" aria-label="Permalink to &quot;Create scheduled task&quot;">​</a></h2><ol><li>Click the <code>+</code> button to the right of <code>my task</code>.</li><li>Select the template you just created.</li><li>Fill in the task variables, task interval, task group and task execution time.</li><li>Click the <code>Test</code> button to test the task.</li><li>Click the Save button to save the task.</li></ol>',21)]))}const g=a(c,[["render",d]]);export{b as __pageData,g as default};
